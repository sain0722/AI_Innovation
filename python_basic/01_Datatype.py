# Python DataType

# list
# list 는 배열(Array)과 비슷한 성질을 갖는다.
# index 는 0 부터 시작하며, 파이썬에서는 마이너스(-) 인덱스를 지원함.
#   - 리스트의 마지막부터 역순으로 값을 참조할 수 있음.
#   - 머신러닝 코드에서 슬라이싱과 함께 자주 사용됨.

a = [10, 20, 30, 40, 50]

print("a[0] == ",  a[0],  "a[2] == ", a[2])
print("a[-1] == ",  a[-1],  "a[-2] == ", a[-2])
print()

# list 각 요소의 데이터타입을 다르게 생성할 수 있음.
# list 안에 또 다른 list 를 포함할 수 있음.

b = [10, 20, "Hello", [True, 3.14]]

print("b[0] == ", b[0], ", b[2] == ", b[2], " , b[3] == ", b[3])
print("b[-1] == ", b[-1], ", b[-2] == ", b[-2], " , b[-4] == ", b[-4])

print("b[3][0] == ", b[3][0], ", b[3][1] == ", b[3][1])
print("b[-1][-1] == ", b[-1][-1], ", b[-1][-2] == ", b[-1][-2])

# 빈 list 생성 후 append method 를 이용하여 데이터 추가
#   - 머신러닝 코드에서 정확도 계산, 손실함수 값 저장하기 위해 사용.
# 콜론(:)을 이용한 슬라이싱 기능이 있음.
#   - 슬라이싱을 이용하면 범위를 지정해 부분 리스트를 얻을 수 있음.
#   - 머신러닝을 위해서 반드시 알아야 하는 기능
# a[0:2] => 인덱스 0부터 (2-1) 까지
# a[1:]  => 인덱스 1부터 끝까지
# a[:3]  => 인덱스 처음부터 (3-1) 까지
# a[:-2] => 인덱스 처음부터 (-2-1) 까지
# a[:]   => 인덱스 처음부터 끝까지
a = [10, 20, 30, 40, 50]

print("a[0:2] == ", a[0:2], ", a[1:] == ", a[1:])
print("a[:3] == ", a[:3], ", a[:-2] == ", a[:-2])
print("a[:] == ", a[:])
print()

#######################################################################

# tuple
# list 와 거의 비슷함.
# 차이점
#   - 리스트는 []으로 둘러싸지만, tuple 은 ()으로 둘러싼다.
#   - 리스트 내의 원소는 변경할 수 있지만, tuple 은 변경할 수 없다. (immutable)

a = (10, 20, 30, 40, 50)

print("a[0] == ",  a[0],  "a[-2] == ", a[-2], ", a[:] == ", a[:])
print("a[0:2] == ",  a[0:2],  "a[1:] == ", a[1:])
print()
# a[0] = 100    # a[0] 값을 100으로 변경하려 하기 때문에 TypeError 발생

#######################################################################
